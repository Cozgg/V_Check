// T·∫°o menu chu·ªôt ph·∫£i khi extension ƒë∆∞·ª£c c√†i ƒë·∫∑t
chrome.runtime.onInstalled.addListener(() => {
  chrome.contextMenus.create({
    id: "factCheckSelection",
    title: "Check with V_Checkü§î",
    contexts: ["selection"]
  });
});

// L·∫Øng nghe s·ª± ki·ªán khi ng∆∞·ªùi d√πng nh·∫•p v√†o menu chu·ªôt ph·∫£i
chrome.contextMenus.onClicked.addListener((info, tab) => {
  if (info.menuItemId === "factCheckSelection" && info.selectionText) {
    if (tab && tab.id) {
      try {
        // G·ª≠i tin nh·∫Øn ƒë·ªÉ HI·ªÇN TH·ªä POPUP LOADING
        chrome.tabs.sendMessage(tab.id, {
          action: "showLoadingPopup",
          text: info.selectionText
        });
      } catch (e) {
        console.warn("Kh√¥ng th·ªÉ g·ª≠i tin nh·∫Øn ƒë·∫øn content script. C√≥ th·ªÉ trang ch∆∞a s·∫µn s√†ng ho·∫∑c c·∫ßn ƒë∆∞·ª£c t·∫£i l·∫°i.");
        console.warn(e);
      }
      // B·∫Øt ƒë·∫ßu g·ªçi API
      callFactCheckingAPI(info.selectionText, tab.id);
    }
  }
});

async function callFactCheckingAPI(text, tabId) {
  const API_URL = "http://127.0.0.1:5000/api/check";
  try {
    const response = await fetch(API_URL, {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
      },
      // G·ª≠i vƒÉn b·∫£n m√† ng∆∞·ªùi d√πng ƒë√£ b√¥i ƒëen
      body: JSON.stringify({ text: text })
    });

    if (!response.ok) {
      // N·∫øu m√°y ch·ªß Flask tr·∫£ v·ªÅ l·ªói (v√≠ d·ª•: 500)
      throw new Error(`L·ªói HTTP: ${response.status}`);
    }

    const resultData = await response.json();
    console.log("ƒê√É NH·∫¨N K·∫æT QU·∫¢ T·ª™ FLASK:", resultData); // D√≤ng ki·ªÉm tra
    // G·ª≠i th√¥ng ƒëi·ªáp ch·ª©a K·∫æT QU·∫¢ v·ªÅ cho content script
    try {
      chrome.tabs.sendMessage(tabId, {
        action: "showResult",
        data: resultData
      });
    } catch (e) {
      console.warn("Kh√¥ng th·ªÉ g·ª≠i k·∫øt qu·∫£ ƒë·∫øn content script (c√≥ th·ªÉ tab ƒë√£ b·ªã ƒë√≥ng):", e);
    }

  } catch (error) {
    console.error("L·ªói API:", error);
    // G·ª≠i th√¥ng ƒëi·ªáp b√°o l·ªói v·ªÅ cho content script (n·∫øu c·∫ßn)
    try {
      chrome.tabs.sendMessage(tabId, {
        action: "showError",
        error: "Kh√¥ng th·ªÉ ph√¢n t√≠ch."
      });
    } catch (e) {
      // B·ªè qua n·∫øu tab ƒë√£ ƒë√≥ng
    }
  }
}
